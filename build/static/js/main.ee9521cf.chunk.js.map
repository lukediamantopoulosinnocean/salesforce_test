{"version":3,"sources":["_components/App.js","_utils/index.js","_components/Quiz.js","_components/Logo.js","_components/ThemeSwitch.js","_components/Sign.js","_components/Explanation.js","index.js"],"names":["App","useState","isInitiated","setIsInitiated","className","onClick","random","array","Math","floor","length","shuffledData","originalArray","temporaryValue","randomIndex","concat","currentIndex","shuffle","data","questions","Quiz","messages","isFinished","setIsFinished","score","setScore","numberOfQuestions","setCurrentIndex","currentQuestion","setCurrentQuestion","isAnswering","setIsAnswering","answer","setAnswer","isLastQuestion","card","useRef","optionsList","resetCheckboxes","current","children","forEach","checked","response","correct","Promise","resolve","reject","setTimeout","wrong","handleAnswer","a","options","verdict","map","id","parseInt","dataset","isCorrect","useEffect","ref","message","question","option","htmlFor","key","data-id","type","name","value","text","disabled","content","explanation","Logo","A","I","R","saucer","gsap","set","transformOrigin","to","duration","y","stagger","each","repeat","yoyo","delay","ease","rotation","xmlns","viewBox","timeline","add","scale","x","fromTo","immediateRender","x1","y1","x2","y2","gradientUnits","offset","stopColor","stopOpacity","points","d","ThemeSwitch","localStorage","getItem","theme","setTheme","document","body","classList","setItem","remove","e","Sign","str","ranges","join","replace","RegExp","removeEmoji","Explanation","tl","btn","isActive","setIsActive","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee9521cf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Quiz, Logo, ThemeSwitch } from '../_components';\nimport '../_style/App.scss';\n\nfunction App() {\n\tconst [isInitiated, setIsInitiated] = useState(false);\n\n\tconst handleInit = () => {\n\t\tsetIsInitiated(true);\n\t}\n\n\treturn (\n\t\t<div className=\"app flex flex-column\">\n\t\t\t<header className=\"flex flex-space-between\">\n\t\t\t\t<Logo/>\n\t\t\t\t<ThemeSwitch/>\n\t\t\t</header>\n\n\t\t\t<main className=\"flex flex-center flex-remaining\">\n\t\t\t\t{ isInitiated ? (\n\t\t\t\t\t<Quiz />\n\t\t\t\t) : (\n\t\t\t\t\t<section className=\"text-center\">\n\t\t\t\t\t\t<p>Welcome to InnAir's</p>\n\t\t\t\t\t\t<h1>Salesforce Marketing Cloud Email Specialist training exam</h1>\n\t\t\t\t\t\t<p>Questions curated from the brilliant minds here at Innocean to help aid you on your quest for global email domination.</p>\n\t\t\t\t\t\t<div className=\"stacking-context\">\n\t\t\t\t\t\t\t<button className=\"btn-submit\" onClick={ handleInit }>Let's Go</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t)}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const shuffle = originalArray => {\n  var array = [].concat(originalArray);\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nconst random = {\n\tpick: array => array[Math.floor(Math.random()*array.length)]\n}\n\nconst colors = {\n\tcorrect: '#5ad258',\n\twrong: '#d25858'\n}\n\nexport {\n\tshuffle,\n\trandom,\n\tcolors\n}\n","import React, { useState, useEffect, Fragment, useRef } from 'react';\nimport { data } from '../_data';\nimport { gsap } from \"gsap\";\nimport { shuffle, colors, random } from \"../_utils\";\nimport { Sign, Explanation } from \".\";\n\n// Mix and match the questions\nconst shuffledData = shuffle(data.questions);\n\nconst Quiz = () => {\n\n\tconst messages = {\n\t\tcorrect: [\n\t\t\t\"You're a superstar!\",\n\t\t\t\"Can you see into the future?!\",\n\t\t\t\"Correcto Mundo!\",\n\t\t\t\"What a flying ace you are!\",\n\t\t\t\"Heck yes!\",\n\t\t\t\"F*&# Yes!\",\n\t\t\t\"You hero!\",\n\t\t\t\"BOOOOOOOM! 💥\",\n\t\t\t\"Yaaaaas Queeeeen! 👑\",\n\t\t\t\"👍🏽\",\n\t\t\t\"🤯 How did you know?!\",\n\t\t\t\"🎯\",\n\t\t\t\"You're a wizard! 🧙‍♂️\"\n\t\t],\n\t\twrong: [\n\t\t\t\"Ouch, want to try again?\",\n\t\t\t\"Did you even study? Try again.\",\n\t\t\t\"Nope\",\n\t\t\t\"Double Nope\",\n\t\t\t\"Let's not talk about that one...\",\n\t\t\t\"ooops...\",\n\t\t\t\"Gosh darnit, that's unfortunate.\",\n\t\t\t\"Have you had your coffee today...?\",\n\t\t\t\"Go caffeinate and try again.\",\n\t\t\t\"Odds point to nope\",\n\t\t\t\"🤦🏽‍♀️\",\n\t\t\t\"🙅🏽‍♂️\",\n\t\t\t\"👎🏽\",\n\t\t\t\"I think you need to read more books...\",\n\t\t\t\"💩\"\n\t\t]\n\t}\n\n\t// Determine if the user is done the quiz\n\tconst [ isFinished, setIsFinished ] = useState(false);\n\tconst [ score, setScore ] = useState(0);\n\tconst numberOfQuestions = shuffledData.length;\n\n\t// Current questions\n\tconst [ currentIndex, setCurrentIndex ] = useState(1);\n\tconst [ currentQuestion, setCurrentQuestion ] = useState({ ...shuffledData[currentIndex] });\n\tconst [ isAnswering, setIsAnswering ] = useState(true);\n\tconst [ answer, setAnswer ] = useState('correct');\n\n\tconst isLastQuestion = currentIndex > numberOfQuestions - 1;\n\n\t// Refs\n\tconst card = useRef();\n\tconst optionsList = useRef();\n\n\tconst nextQuestion = () => {\n\t\tif ((currentIndex + 1) <= numberOfQuestions) {\n\t\t\tsetCurrentIndex(currentIndex + 1);\n\t\t\tsetIsAnswering(true);\n\t\t\tresetCheckboxes();\n\t\t} else {\n\t\t\tsetIsFinished(true);\n\t\t}\n\t}\n\n\tconst resetCheckboxes = () => {\n\t\tconst options = [...optionsList.current.children];\n\t\toptions.forEach(answer => answer.children[0].checked = false);\n\t}\n\n\tconst response = {\n\t\tcorrect: () => {\n\t\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\t\tsetScore(score + 1);\n\t\t\t\tsetAnswer(random.pick(messages.correct))\n\t\t\t\tsetTimeout( () => resolve(), 750);\n\t\t\t})\n\t\t},\n\t\twrong: () => {\n\t\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\t\tsetAnswer(random.pick(messages.wrong))\n\t\t\t\tsetTimeout( () => resolve(), 750);\n\t\t\t})\n\t\t}\n\t}\n\n\tconst handleAnswer = async () => {\n\n\t\tif (!isAnswering) return; // Exit function if the user has already answered\n\n\t\t// These are the users picks\n\t\tconst options = [...optionsList.current.children];\n\t\tlet verdict = 'correct'; // Innocent until proven guilty\n\n\t\t// Loop through the data (currentQuestion) to get each option/answer\n\t\tcurrentQuestion.options.map( data => {\n\t\t\t// Then with each option/answer from the data, loop through each option the user was presented\n\t\t\treturn options.forEach( answer => {\n\t\t\t\t// Match each id of the data option with the users answer\n\t\t\t\tif (data.id === parseInt(answer.dataset.id)) {\n\t\t\t\t\t// If the id's match, check to see if the 'isCorrect' DOES NOT match the users answer\n\t\t\t\t\tif (!data.isCorrect === answer.children[0].checked) {\n\t\t\t\t\t\tverdict = 'wrong';\n\t\t\t\t\t\treturn; \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tsetIsAnswering(false);\n\t\tawait response[verdict]();\n\t}\n\n\t// Change questions\n\tuseEffect(() => {\n\t\tsetCurrentQuestion({ ...shuffledData[currentIndex - 1] })\n\t}, [currentIndex]);\n\n\treturn (\n\t\t<Fragment>\n\t\t{ isFinished ? (\n\t\t\t<div className=\"card flex-center text-center\">\n\t\t\t\t<p>Score <span>{score} / { numberOfQuestions }</span></p>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<Fragment>\n\t\t\t\t<section className=\"card\" ref={card}>\n\t\t\t\t\t<Sign isAnswering={isAnswering} message={answer}/>\n\t\t\t\t\t<div className=\"card-wrapper\">\n\t\t\t\t\t\t<p className=\"card-number\">{currentIndex} / { numberOfQuestions }</p>\n\t\t\t\t\t\t<h2 className=\"card-question\">{ currentQuestion.question }</h2>\n\t\t\t\t\t\t<form ref={optionsList}>\n\t\t\t\t\t\t\t{ currentQuestion.options.map( option => (\n\t\t\t\t\t\t\t\t<label htmlFor={ option.id } key={option.id} data-id={option.id}>\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id={ option.id } name={ option.id } value={ option.text }/>\n\t\t\t\t\t\t\t\t\t{ option.text }\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<button className=\"btn-primary\" disabled={ !isAnswering } onClick={ handleAnswer }>Answer Question</button>\n\t\t\t\t\t\t<button className=\"btn-secondary\" disabled={ isAnswering } onClick={ nextQuestion }>{ isLastQuestion ? \"See Results\" : \"Next Question\"}</button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{ !isAnswering && <Explanation content={currentQuestion.explanation}/>}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</Fragment>\n\t\t\t)}\n\t\t</Fragment>\n\t)\n}\n\nexport default Quiz;","import React, { useRef, useEffect } from 'react';\nimport gsap, { timeline } from \"gsap\";\n\nconst Logo = () => {\n\n\tconst A = useRef(null);\n\tconst I = useRef(null);\n\tconst R = useRef(null);\n\n\tconst saucer = useRef(null);\n\n\tuseEffect( () => {\n\t\tgsap.set(saucer.current, { transformOrigin: '50% 50%'})\n\t\tgsap.to([I.current, R.current ,A.current], { duration: 1.5, y: -15, stagger: { each: .25, repeat: -1, yoyo: true}, delay: -1.5, ease: 'sine.inOut' }, 0)\n\t\tgsap.to(saucer.current, { duration: 1.5, repeat: -1, yoyo: true, rotation: '7deg', y: 10, ease: 'sine.inOut' }, 0)\n\t}, []);\n\n\tconst handleClick = () => {\n\t\tlet tl = gsap.timeline()\n\t\t\t.add('accend')\n\t\t\t.to(A.current, { scale: 0, x: 85, y: -70 }, 'accend')\n\t\t\t.to(I.current, { scale: 0, x: 5, y: -50 }, '<.1')\n\t\t\t.to(R.current, { scale: 0, x: -35, y: -60 }, '<.1')\n\t\t\t.add('pause', '+=1')\n\t\t\t.fromTo([A.current,I.current, R.current], { scale: 0, x: 0, y: 0 }, { scale: 1, ease: 'expo.out', immediateRender: false }, 'pause')\n\t}\n\n\treturn (\n\t\t<svg className=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 456 241.46\" onClick={ handleClick }>\n\t\t\t<defs>\n\t\t\t\t<linearGradient id=\"linear-gradient\" x1=\"363.14\" y1=\"11.53\" x2=\"363.14\" y2=\"270.91\" gradientUnits=\"userSpaceOnUse\">\n\t\t\t\t\t<stop offset=\"0\" stopColor=\"#fff\"/>\n\t\t\t\t\t<stop offset=\"0.34\"/>\n\t\t\t\t</linearGradient>\n\t\n\t\t\t\t<linearGradient id=\"linear-gradient-2\" x1=\"341.86\" y1=\"214.15\" x2=\"358.7\" y2=\"67.09\" gradientUnits=\"userSpaceOnUse\">\n\t\t\t\t\t<stop offset=\"0\" stopColor=\"#fff\" stopOpacity=\"0.08\"/>\n\t\t\t\t\t<stop offset=\"0.33\" stopColor=\"#fff\" stopOpacity=\"0.15\"/>\n\t\t\t\t\t<stop offset=\"0.66\" stopColor=\"#fff\" stopOpacity=\"0.3\"/>\n\t\t\t\t\t<stop offset=\"0.89\" stopColor=\"#fff\" stopOpacity=\"0.64\"/>\n\t\t\t\t\t<stop offset=\"1\" stopColor=\"#fff\" stopOpacity=\".8\"/>\n\t\t\t\t</linearGradient>\n\t\t\t</defs>\n\t\t\t\t<g className=\"logo-svg\">\n\t\t\t\t\t<polygon className=\"cls-3\" points=\"445 224.53 236 227.53 325.69 28.38 363.48 42.66 445 224.53\"/>\n\t\t\t\t\t<path d=\"M22.23,149.3v92.16H0V149.3Z\"/>\n\t\t\t\t\t<path d=\"M42.3,149.3H62.78L83,180.17q5.42,8.34,10.46,17a120.17,120.17,0,0,1,7.83,15.72h.29q-.74-8.77-.88-17.62t-.14-17.63V149.3H121v92.16H100.52L79.16,210q-5.26-7.75-9.65-15.8a110,110,0,0,1-7.47-17h-.29q.73,9.22.88,17.7t.15,17.26v29.26H42.3Z\"/>\n\t\t\t\t\t<path d=\"M141.06,149.3h20.48l20.18,30.87q5.42,8.34,10.46,17A118.92,118.92,0,0,1,200,212.93h.29q-.74-8.77-.88-17.62t-.14-17.63V149.3h20.48v92.16H199.28L177.92,210q-5.26-7.75-9.65-15.8a110,110,0,0,1-7.46-17h-.3q.74,9.22.88,17.7t.15,17.26v29.26H141.06Z\"/>\n\t\t\t\t\t<path ref={A}  d=\"M261.55,132.74l23.62-1.88,40.41,89.23L302.1,222l-7.83-19.19-30.92,2.46-4.7,20.18-23.18,1.85Zm5.34,56.07,21-1.67-4.38-10.81q-2.19-5.25-4.49-11.23t-4-11l-.3,0q-1.05,5.22-2.47,11.35t-2.71,12Z\"/>\n\t\t\t\t\t<path ref={I} d=\"M362.63,108.9l-5.57,92-22.2-1.35,5.57-92Z\"/>\n\t\t\t\t\t<path ref={R} d=\"M394.89,118.57,430.47,127a39.72,39.72,0,0,1,13.07,5.42,28.37,28.37,0,0,1,8.39,8.38,25.84,25.84,0,0,1,3.79,10.36,30.86,30.86,0,0,1-.6,11.44,26.85,26.85,0,0,1-9.88,15.7,26.3,26.3,0,0,1-6.77,3.81,38.82,38.82,0,0,1-6.29,1.81l12.94,41.25-24.91-5.9-8.3-36.09-9-2.12-7.64,32.32-21.64-5.13Zm11.93,46.11,6.55,1.55q7.39,1.76,12.66-.16t6.85-8.6a11.52,11.52,0,0,0-1.61-9.7q-2.94-4.16-9.91-5.8l-8.68-2.06Z\"/>\n\t\t\t\t\t<g className=\"saucer\" ref={saucer}>\n\t\t\t\t\t\t<path d=\"M422,41.06c-1,6.83-37.71,6.95-81.92.27s-79.21-17.64-78.18-24.47c.9-5.94,28.76-6.8,65.09-2.53a16.53,16.53,0,0,0-.18,2.45,16.79,16.79,0,0,0,33.38,2.56C396.32,26,422.87,35.1,422,41.06Z\"/>\n\t\t\t\t\t\t<path d=\"M360.35,16.78a17.93,17.93,0,0,1-.19,2.56c-5.27-1-10.74-1.9-16.37-2.75S332.4,15,327,14.33a16.79,16.79,0,0,1,33.39,2.45Z\"/>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t</svg>\n\t)\n}\n\nexport default Logo;","import React, { useRef, useState, useEffect } from 'react';\n\nconst DARK_THEME_CLASS = 'theme-dark';\n\nconst ThemeSwitch = () => {\n\n\tconst [theme, setTheme] = useState(localStorage.getItem('theme'));\n\n\tuseEffect(() => {\n\t\tif (theme === 'dark') {\n\t\t\tdocument.body.classList.add(DARK_THEME_CLASS);\n\t\t\tlocalStorage.setItem('theme', 'dark');\n\t\t} else {\n\t\t\tdocument.body.classList.remove(DARK_THEME_CLASS);\n\t\t\tlocalStorage.setItem('theme', 'light');\n\t\t}\n\t}, [theme]);\n\n\tconst handleClick = e => {\n\t\ttheme === 'dark' ? setTheme('light') : setTheme('dark');\n\t}\n\n\treturn (\n\t\t<div className=\"theme-switch\" onClick={handleClick}>\n\t\t\t<span className=\"theme-switch-ball\"></span>\n\t\t</div>\n\t)\n}\n\nexport default ThemeSwitch;","import React, { useState } from 'react';\n\nconst Sign = ({ isAnswering, message }) => {\n\t\n\tconst ranges = [\n\t  '\\ud83c[\\udf00-\\udfff]', // U+1F300 to U+1F3FF\n\t  '\\ud83d[\\udc00-\\ude4f]', // U+1F400 to U+1F64F\n\t  '\\ud83d[\\ude80-\\udeff]', // U+1F680 to U+1F6FF\n\t  ' ', // Also allow spaces\n\t].join('|');\n\n\tconst removeEmoji = str => str.replace(new RegExp(ranges, 'g'), '');\n\n\tconst isOnlyEmojis = str => !removeEmoji(str).length;\n\n\treturn (\n\t\t<div className={isAnswering ? \"sign\" : \"sign sign-active\"}>\n\t\t\t<div className={ isOnlyEmojis(message) ? 'sign-board emoji' : 'sign-board'}>{ message }</div>\n\t\t\t<div className=\"sign-post\"></div>\n\t\t</div>\n\t)\n}\n\nexport default Sign;","import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\n\nconst Explanation = ({ content }) => {\n\n\tlet tl = gsap.timeline();\n\tconst btn = useRef(null);\n\tconst [isActive, setIsActive] = useState(false);\n\n\tuseEffect(() => {\n\t\ttl.fromTo(btn.current, { scale: 0 }, { scale: 1, duration: .75, ease: 'elastic.out(1, 0.5)' })\n\t},[]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className={`explanation flex flex-center ${isActive ? \"active\" : \"\"}`}>\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Explanation:</h2>\n\t\t\t\t\t<p>{content}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button className=\"explanation-btn\" ref={btn} onClick={() => setIsActive(!isActive)}>\n\t\t\t\t<span className=\"flex flex-center\">{ isActive ? \"X\" : \"?\"}</span>\n\t\t\t</button>\n\t\t</Fragment>\n\t)\n}\n\nexport default Explanation;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './_components';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}